<%@ page class="DefaultPage"
%>

<%@ impl include="LightWeightServer.h"
%>

<%!
    using Poco::Util::AbstractConfiguration;
    using Poco::Util::Application;
    using Poco::Net::HTTPServer;
    using Poco::DateTimeFormatter;
    using Poco::DateTime;
    using Poco::Logger;
    using Poco::Timespan;
    using std::string;
    using std::map;

    typedef map<string, string> StringMap;

    Logger& logger()
    {
        return Logger::get("page.default");
    }

    void getApplicationProperties(const string& base, StringMap& prop)
    {
        AbstractConfiguration::Keys keys;
        AbstractConfiguration& config = Application::instance().config();
        config.keys(base, keys);
        if (keys.empty())
        {
            if (config.hasProperty(base))
            {
                prop[base] = config.getString(base);
            }
        }
        else
        {
            for (AbstractConfiguration::Keys::const_iterator it = keys.begin(); it != keys.end(); ++it)
            {
                string fullKey = base;
                if (!fullKey.empty()) fullKey += '.';
                fullKey.append(*it);
                getApplicationProperties(fullKey, prop);
            }
        }
    }

    void getRuntimeProperties(StringMap& prop)
    {
        Timespan uptime = Application::instance().uptime();
        const LightWeightServer& serverApp = dynamic_cast<const LightWeightServer&>(Application::instance());
        const HTTPServer& server = serverApp.server();
        prop["runtime.uptime"] = DateTimeFormatter::format(uptime);
        prop["runtime.currentConnections"] = Poco::format("%d", server.currentConnections());
        prop["runtime.currentThreads"] = Poco::format("%d", server.currentThreads());
        prop["runtime.queuedConnections"] = Poco::format("%d", server.queuedConnections());
        prop["runtime.refusedConnections"] = Poco::format("%d", server.refusedConnections());
        prop["runtime.totalConnections"] = Poco::format("%d", server.totalConnections());
    }
%>

<%
    DateTime now;
    string dt = DateTimeFormatter::format(now, "%W, %e %b %y %H:%M:%S %Z");
    //poco_debug(logger(), request.getURI());

    StringMap runtimeProp;
    getRuntimeProperties(runtimeProp);

    StringMap appProp;
    getApplicationProperties("", appProp);
%>

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>LightWeightServer powered by POCO C++ Libraries and PageCompiler</title>
        <link href="/css/bootstrap.min.css" rel="stylesheet">
        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
        <![endif]-->
    </head>
    <body>
        <p style="text-align: center; font-size: 48px;"><%= dt %></p>
        <h1>Server Runtime Properties</h1>
        <div class="table-responsive"> <table class="table table-striped table-condensed table-hover">
            <thead> <tr>
                <th>Name</th>
                <th>Value</th>
            </tr> </thead>
            <tbody>
            <% for (StringMap::const_iterator it = runtimeProp.begin(); it != runtimeProp.end(); ++it) { %>
            <tr>
                <td><%= it->first %></td>
                <td><%= it->second %></td>
            </tr>
            <% } %>
            </tbody>
        </table> </div>
        <h1>Application Properties</h1>
        <div class="table-responsive"> <table class="table table-striped table-condensed table-hover">
            <thead> <tr>
                <th>Name</th>
                <th>Value</th>
            </tr> </thead>
            <tbody>
            <% for (StringMap::const_iterator it = appProp.begin(); it != appProp.end(); ++it) { %>
            <tr>
                <td><%= it->first %></td>
                <td><%= it->second %></td>
            </tr>
            <% } %>
            </tbody>
        </table> </div>
        <script src="/js/jquery.min.js"></script>
        <script src="/js/bootstrap.min.js"></script>
    </body>
</html>
